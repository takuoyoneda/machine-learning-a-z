data()
data()
print(MyVar)
print(class(MyVar))
y <- c(44, 21, 37)
print (y)
print (length(y))
X <- matrix(c(1.1, 1, 545, 1, 4.6, 0, 345, 2, 7.2,
1, 754, 3), nrow=3, ncol=4, byrow=TRUE)
print(X)
X <- matrix(c(1.1, 4.6, 7.2, 1, 0, 1, 545, 345, 754,
1, 2, 3), nrow=3, ncol=4)
print(X)
a <- matrix(c(1, 1, 1, 0), nrow=2, byrow=TRUE)
b <- matrix(c(1, 0, 0, 1), nrow=2, byrow=TRUE)
print(a-b)
a <- matrix(c(0, 1, 1, -1), nrow=2, byrow=TRUE)
print (a*2)
X <- matrix(c(4, 5, 2, 4, 3, 3), nrow=3, byrow=TRUE)
b <- c(3, -2)
print (X%*%b)
B <- matrix(c(3, -2,-2, 5), nrow=2, byrow=TRUE)
print(X %*% B)
if (!"zoo" %in% rownames(installed.packages())) {install.packages("zoo")}
library(zoo)
df <- data.frame(A=c(1,NA,3,NA,5), B=c(2,2,NA,3,3), C=c(NA,NA,NA,8,NA))
print(df)
df <- subset(df, select = c('A','B'))
df['m_B'] <- as.numeric(is.na(df$B))
df$B[is.na(df$B)] <- mean(df$B, na.rm=TRUE)
df$A <- na.approx(df$A)
print(df)
min_max <- function(x) {return ((x - min(x, na.rm=TRUE)) / (max(x, na.rm=TRUE) - min(x, na.rm=TRUE)))}
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Building the optimal model using Backward Elimination
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
setwd("~/Documents/git/machine_learning_a-z/Part 2 - Regression/Section 5 - Multiple Linear Regression/Multiple_Linear_Regression")
# Multiple Linear Regression
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Building the optimal model using Backward Elimination
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
